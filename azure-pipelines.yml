resources:
- repo: self

variables:
  # Agent VM image name
  vmImageName: 'jldeenlinux'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: kubernetes build
    pool:
      # name: work-machine
      name: $(vmImageName)
    steps:

    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'settings.xml'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(system.defaultworkingdirectory)'
      inputs:
        SourceFolder: '$(Agent.TempDirectory)'
        Contents: '**/*.xml'
        TargetFolder: '$(system.defaultworkingdirectory)'

    - task: Docker@2
      displayName: 'Docker build/push'
      inputs:
        command: buildAndPush
        arguments: '--build-arg buildId=$(Build.BuildId)'
        containerRegistry: jdk8sacr
        repository: build19
      continueOnError: true

    - task: HelmInstaller@0
      displayName: 'Install Helm 2.13.1'
      inputs:
        helmVersion: 2.13.1

    - task: HelmDeploy@0
      displayName: 'helm package'
      inputs:
        command: package
        chartPath: 'charts/spring-boot-websocket-chat-demo'
        chartVersion: '$(build.BuildId)'
    
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: '**/*.jar'
        TargetFolder: '$(pipeline.artifactstagingdirectory)/chart'

    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'charts'

    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'jar'

    - bash: 'rm $(system.defaultworkingdirectory)/settings.xml && echo "Successfully removed settings.xml from your default working directory."'
      displayName: Cleanup

- stage: DeployToDev
  displayName: Deploy to Dev
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/'))
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    environment: 'build19-dev'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: HelmInstaller@0
            inputs:
              helmVersion: '2.13.1'

          - task: HelmDeploy@0
            displayName: 'helm init'
            inputs:
              azureSubscription: 'ca-jessde-demo-test (dfb5d696-98d8-447c-a14d-56f131f3c4a5)'
              azureResourceGroup: 'jdk8s-us'
              kubernetesCluster: 'jdk8s-us'
              command: init
              upgradeTiller: false
              arguments: '--client-only'

          - task: HelmDeploy@0
            displayName: 'helm upgrade'
            inputs:
              azureSubscription: 'ca-jessde-demo-test (dfb5d696-98d8-447c-a14d-56f131f3c4a5)'
              azureResourceGroup: 'jdk8s-us'
              kubernetesCluster: 'jdk8s-us'
              command: upgrade
              chartType: FilePath
              chartPath: '$(System.ArtifactsDirectory)/charts/spring-boot-websocket-chat-demo-v0.1.0.tgz'
              releaseName: 'java-dev'
              overrideValues: 'image.repository=jdk8s.azurecr.io/jldeen/spring-boot-websocket-chat-demo,image.tag=$(Build.BuildId)'
    